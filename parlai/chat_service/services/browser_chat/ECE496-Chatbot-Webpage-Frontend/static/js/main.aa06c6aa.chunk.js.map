{"version":3,"sources":["chatbot/config.js","chatbot/ActionProvider.js","chatbot/MessageParser.js","ChatPage.js","uoft_logo.png","PersonalityPage.js","reportWebVitals.js","index.js"],"names":["config","botName","initialMessages","createChatBotMessage","ActionProvider","setStateFunc","createClientMessage","greet","message_text","message","addMessageToState","setState","prevState","messages","this","MessageParser","actionProvider","state","console","log","fetch","method","headers","body","then","response","status","json","data","text","text_trans","ChatPage","className","messageParser","PersonalityPage","React","personality","setPersonality","src","UofT","alt","Stack","Box","component","sx","m","width","noValidate","autoComplete","TextField","id","label","variant","value","onChange","event","target","to","Button","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","exact","path","document","getElementById"],"mappings":"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","file":"static/js/main.aa06c6aa.chunk.js","sourcesContent":["// Config starter code\r\nimport { createChatBotMessage } from \"react-chatbot-kit\";\r\n\r\nconst config = {\r\n    botName: \"BlenderBot\",\r\n    initialMessages: [createChatBotMessage(`Hi! Talk to me :D`)]\r\n}\r\n\r\nexport default config","\r\n// ActionProvider starter code\r\nclass ActionProvider {\r\n    constructor(createChatBotMessage, setStateFunc, createClientMessage) {\r\n        this.createChatBotMessage = createChatBotMessage;\r\n        this.setState = setStateFunc;\r\n        this.createClientMessage = createClientMessage;\r\n    }\r\n\r\n    greet = (message_text) => {\r\n        const message = this.createChatBotMessage(message_text);\r\n        this.addMessageToState(message);\r\n    };\r\n\r\n    addMessageToState = (message) => {\r\n        // console.log(\"what is this?\" + JSON.stringify(message))\r\n        this.setState((prevState) => ({\r\n            ...prevState,\r\n            messages: [...prevState.messages, message],\r\n        }));\r\n    };\r\n}\r\n\r\n\r\nexport default ActionProvider;","\r\nclass MessageParser {\r\n  constructor(actionProvider, state) {\r\n    this.actionProvider = actionProvider;\r\n    this.state = state;\r\n  }\r\n  \r\n\r\n  parse(message) {\r\n    console.log(\"user input: \" + message)\r\n    fetch('/interact', {\r\n        method: 'POST',\r\n        headers: {\r\n            'Content-Type': 'application/json',\r\n            'Accept': 'application/json'\r\n        },\r\n        body: message\r\n    })\r\n    .then((response) => {\r\n        if (response.status == 200) {\r\n            return response.json()\r\n        } else {\r\n            return \"\"\r\n        }\r\n    })\r\n    .then(data=>{{\r\n        if (data != \"\") {\r\n          console.log(\"bot input: \" + data.text)\r\n          console.log(\"bot text_trans: \")\r\n          this.actionProvider.greet(\"Original: \" + data.text);\r\n          this.actionProvider.greet(\"Paraphrased: \" + data.text_trans);\r\n        } else {\r\n          this.actionProvider.greet(\"Sorry, my backend had some issue:(\");\r\n        }\r\n    }})\r\n  }\r\n}\r\n\r\nexport default MessageParser;","// import logo from './logo.svg';\nimport './ChatPage.css';\nimport Chatbot from \"react-chatbot-kit\";\nimport config from \"./chatbot/config\";\nimport ActionProvider from \"./chatbot/ActionProvider\";\nimport MessageParser from \"./chatbot/MessageParser\";\n\nfunction ChatPage() {\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <Chatbot\n          config={config}\n          actionProvider={ActionProvider}\n          messageParser={MessageParser}\n        />\n      </header>\n    </div>\n  );\n}\n\nexport default ChatPage;\n","export default __webpack_public_path__ + \"static/media/uoft_logo.f5dd18d6.png\";","import * as React from 'react';\r\nimport './PersonalityPage.css';\r\nimport Box from '@mui/material/Box';\r\nimport TextField from '@mui/material/TextField';\r\nimport Stack from '@mui/material/Stack';\r\nimport Button from '@mui/material/Button';\r\nimport UofT from './uoft_logo.png';\r\nimport {\r\n    BrowserRouter as Router,\r\n    Switch,\r\n    Route,\r\n    Link\r\n  } from \"react-router-dom\";\r\n\r\nfunction PersonalityPage() {\r\n    const [personality, setPersonality] = React.useState('');\r\n    const handleChange = (event) => {\r\n        console.log(\"new2 personality: \" + (event.target.value))\r\n        setPersonality(event.target.value);\r\n    };\r\n    return (\r\n        <div className=\"personality-page\">\r\n            <div className=\"logo\">\r\n                <img src={UofT} alt=\"UofT\" />\r\n            </div>\r\n            <br />\r\n            <br />\r\n            <div className=\"inputs\">\r\n                <Stack>\r\n                <Box\r\n                    component=\"form\"\r\n                    sx={{\r\n                        '& > :not(style)': { m: 1, width: '25ch' },\r\n                    }}\r\n                    noValidate\r\n                    autoComplete=\"off\"\r\n                    >\r\n                    <TextField \r\n                        id=\"user-personality\" \r\n                        label=\"What is your personality?\" \r\n                        variant=\"standard\" \r\n                        value={personality}\r\n                        onChange={handleChange}/>\r\n                </Box>\r\n                <br/>\r\n                <Link to=\"/chat-page\">\r\n                    <Button variant=\"outlined\">Talk with our AI Chatbot</Button>\r\n                </Link>\r\n                </Stack>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default PersonalityPage;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport ChatPage from './ChatPage';\nimport PersonalityPage from './PersonalityPage';\nimport reportWebVitals from './reportWebVitals';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link,\n  Redirect,\n} from \"react-router-dom\";\n\nReactDOM.render(\n  <React.StrictMode>\n     {/* <ChatPage /> */}\n    <Router>\n      <div>\n        <Route exact path=\"/ECE496-Chatbot-Webpage-Frontend\">\n            <Redirect to=\"/personality-page\" />\n        </Route>\n        <Route exact path=\"/\">\n            <Redirect to=\"/personality-page\" />\n        </Route>\n        <Switch>\n          <Route path=\"/personality-page\">\n            <PersonalityPage />\n          </Route>\n          <Route path=\"/chat-page\">\n            <ChatPage />\n          </Route>\n        </Switch>\n      </div>\n    </Router>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}